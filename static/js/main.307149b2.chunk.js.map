{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","credit","date","slice","amount","description","id","event","Date","toISOString","tempid","source","i","Math","floor","random","length","addCredit","reset","step","Debits","debits","debit","Debit","addDebit","App","temp","round","currentCredits","push","newBalance","Number","currentDebits","logInInfo","newUser","currentUser","a","totalCredits","totalDebits","axios","get","response","data","console","log","status","balance","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.307149b2.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}  // Create an object for state\r\n    updatedUser.userName = e.target.value  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>)\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Credits = (props) => {\r\n  // Create the list of credit items\r\n  let creditsView = () => {\r\n    const { credits } = props;\r\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = credit.date.slice(0,10);\r\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\r\n    })\r\n  }\r\n  const handleSubmit = (event) =>{\r\n    \r\n    event.preventDefault();\r\n    let date = new Date().toISOString();\r\n    let tempid = ''; // temporary id holder\r\n    let source = 'qwertyuiopasdfghjklzxcvbnm1234567890'; // create a source string\r\n    for (let i = 0; i < 8; i++) {\r\n      tempid += source[Math.floor(Math.random() * (source.length) )];\r\n    }\r\n    tempid += '-';\r\n    for (let i = 0; i < 4; i++) {\r\n      tempid += source[Math.floor(Math.random() * (source.length) )];\r\n    }\r\n    tempid += '-';\r\n    for (let i = 0; i < 4; i++) {\r\n      tempid += source[Math.floor(Math.random() * (source.length) )];\r\n    }\r\n    tempid += '-';\r\n    for (let i = 0; i < 4; i++) {\r\n      tempid += source[Math.floor(Math.random() * (source.length) )];\r\n    }\r\n    tempid += '-';\r\n    for (let i = 0; i < 12; i++) {\r\n      tempid += source[Math.floor(Math.random() * (source.length) )];\r\n    } //Generate random id\r\n\r\n    let credit = { //create new json object\r\n      amount: event.target.amount.value,\r\n      date: date,\r\n      description: event.target.description.value,\r\n      id: tempid\r\n    }\r\n    \r\n    props.addCredit(credit); // add the credit object to the list\r\n    event.target.reset(); // reset the input form\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      <AccountBalance accountBalance={props.accountBalance}/>\r\n      <br/>\r\n      {creditsView()}\r\n\r\n      <form onSubmit={e => {handleSubmit(e)} }>\r\n        <input type=\"text\" name=\"description\" />\r\n        <input type=\"number\" name=\"amount\" step=\".01\"/>\r\n        <button type=\"submit\">Add credit</button>\r\n      </form>\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Credits;","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Debits = (props) => {\r\n  // Create the list of Debit items\r\n  let debitsView = () => {\r\n    const { debits } = props;\r\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = debit.date.slice(0,10);\r\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) =>{\r\n    \r\n    event.preventDefault();\r\n    let date = new Date().toISOString();\r\n    let tempid = ''; // temporary id holder\r\n    let source = 'qwertyuiopasdfghjklzxcvbnm1234567890'; // create a source string\r\n    for (let i = 0; i < 8; i++) {\r\n      tempid += source[Math.floor(Math.random() * (source.length) )];\r\n    }\r\n    tempid += '-';\r\n    for (let i = 0; i < 4; i++) {\r\n      tempid += source[Math.floor(Math.random() * (source.length) )];\r\n    }\r\n    tempid += '-';\r\n    for (let i = 0; i < 4; i++) {\r\n      tempid += source[Math.floor(Math.random() * (source.length) )];\r\n    }\r\n    tempid += '-';\r\n    for (let i = 0; i < 4; i++) {\r\n      tempid += source[Math.floor(Math.random() * (source.length) )];\r\n    }\r\n    tempid += '-';\r\n    for (let i = 0; i < 12; i++) {\r\n      tempid += source[Math.floor(Math.random() * (source.length) )];\r\n    } //Generate random id\r\n\r\n    let Debit = { //create new json object\r\n      amount: event.target.amount.value,\r\n      date: date,\r\n      description: event.target.description.value,\r\n      id: tempid\r\n    }\r\n    \r\n    props.addDebit(Debit); // add the debit object to the list\r\n    event.target.reset(); // reset the input form\r\n  }\r\n\r\n  // Render the list of Debit items and a form to input new Debit item\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n      \r\n      <AccountBalance accountBalance={props.accountBalance}/>\r\n      <br/>\r\n      {debitsView()}\r\n\r\n      <form onSubmit={e => {handleSubmit(e)} }>\r\n        <input type=\"text\" name=\"description\" />\r\n        <input type=\"number\" name=\"amount\" step=\".01\"/>\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Debits;","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport axios from 'axios';// send asynchronous HTTP requests to RestfulEndpoint\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance:0,\r\n      debits: [],\r\n      credits: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    }\r\n  }\r\n  async componentDidMount(){\r\n    let totalCredits = 0;\r\n    let totalDebits = 0; \r\n\r\n    try {\r\n      let response = await axios.get('https://moj-api.herokuapp.com/credits'); // axio fetch the data\r\n\r\n      this.setState({credits: response.data}); // sets the data to the CreditList \r\n      // Calculate how many credit is added to the account\r\n      for (let credit of this.state.credits) { \r\n        totalCredits += credit.amount;\r\n      }\r\n    }\r\n    catch (error) { // if there is any error then create response and console.log the status of the error response\r\n      if (error.response) {\r\n        console.log(error.response.status); \r\n      }\r\n    }\r\n\r\n    try{\r\n      let response = await axios.get('https://moj-api.herokuapp.com/debits');\r\n      console.log(response); \r\n      this.setState({debits: response.data});\r\n      for(let debit of this.state.debits){\r\n        totalDebits -= debit.amount;\r\n      }\r\n    }catch(error){\r\n      if (error.response) {\r\n        console.log(error.response.status); \r\n      }\r\n    }\r\n    let balance = totalCredits + totalDebits;\r\n\r\n    this.setState({accountBalance:Math.round(balance * 100) / 100});\r\n\r\n  }\r\n\r\n  addCredit = (credit) => {\r\n    let temp = {}; // generate a temp object\r\n    temp.id = credit.id;\r\n    temp.description = credit.description;\r\n    temp.amount = Math.round(credit.amount* 100)/100;\r\n    temp.date = credit.date;\r\n\r\n    let currentCredits = this.state.credits; // create a new list so that it can be used to replace the old list\r\n    currentCredits.push(temp);\r\n    this.setState({credit: currentCredits});\r\n    // Update the account balance\r\n    let newBalance = Number(this.state.accountBalance) + Number(credit.amount); // create new balance\r\n\r\n    this.setState({accountBalance: Math.round(newBalance * 100) / 100}); // set the new balance to the current balance\r\n  }\r\n\r\n  addDebit = (Debit) => {\r\n    let temp = {}; // generate a temp object\r\n    temp.id = Debit.id;\r\n    temp.description = Debit.description;\r\n    temp.amount = Math.round(Debit.amount* 100)/100;\r\n    temp.date = Debit.date;\r\n\r\n    let currentDebits = this.state.debits; // create a new list so that it can be used to replace the old list\r\n    currentDebits.push(temp);\r\n    this.setState({debits: currentDebits});\r\n    // Update the account balance\r\n    let newBalance = Number(this.state.accountBalance) - Number(Debit.amount); // create new balance\r\n\r\n    this.setState({accountBalance: Math.round(newBalance * 100) / 100}); // set the new balance to the current balance\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {\r\n    const newUser = {...this.state.currentUser}\r\n    newUser.userName = logInInfo.userName\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    );\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const DebitsComponent = () => (<Debits debits={this.state.debits} accountBalance={this.state.accountBalance} addDebit = {this.addDebit}/> )\r\n    const CreditsComponent = () => (<Credits credits={this.state.credits} accountBalance={this.state.accountBalance} addCredit = {this.addCredit}/>)\r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/bank-of-react-example-code-gh-pages\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}